/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'com.bmuschko.docker-remote-api' version '7.1.0'
    id 'com.github.johnrengelman.shadow' version '7.1.1'
}

group 'de.johannes-wirth'
version '0.0.1'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

compileJava {
    options.compilerArgs << '-parameters'
}


dependencies {
    implementation group: 'io.dropwizard', name: 'dropwizard-core', version: '2.0.27'
    implementation group: 'io.dropwizard', name: 'dropwizard-jdbi3', version: '2.0.27'
    implementation group: 'io.dropwizard', name: 'dropwizard-auth', version: '2.0.27'
    implementation group: 'io.dropwizard', name: 'dropwizard-migrations', version: '2.0.27'
    implementation group: 'io.dropwizard', name: 'dropwizard-json-logging', version: '2.0.27'
    implementation group: 'de.johannes-wirth', name: 'apps-backend-common', version: '0.0.4'
    implementation 'com.auth0:java-jwt:3.18.2'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.27'

    // Use Scala 2.13 in our library project
    implementation 'org.scala-lang:scala-library:2.13.6'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.scalatest:scalatest_2.13:3.2.9'
}

application {
    // Define the main class for the application.
    mainClass = 'de.johanneswirth.apps.friends.App'
}

shadowJar {
    minimize()
    mergeServiceFiles()
    archiveClassifier = null
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

jar {
    from(configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest { attributes 'Main-Class': application.getMainClass() }
}

task copyScript(type: Copy) {
    from file("startup.sh")
    into file("build/docker/")
}

task copyScript2(type: Copy) {
    from file("build/scripts/" + rootProject.name)
    into file("build/docker/")
}

task copyJar(type: Copy) {
    from file("build/libs/" + rootProject.name + "-" + version + ".jar")
    into file("build/docker/")
}

task excludeLibraries(type: Delete) {
    delete fileTree(dir: "build/docker/${rootProject.name}/lib")
}

import com.bmuschko.gradle.docker.tasks.image.*

task createDockerfile(type: Dockerfile) {
    from 'openjdk:11'
    label(['maintainer': 'Johannes Wirth "johannes-wirth@posteo.de"'])
    workingDir '/' + rootProject.name
    addFile(rootProject.name, 'bin/' + rootProject.name)
    addFile(rootProject.name + '-' + version + '.jar', 'lib/' + rootProject.name + '-' + version + '.jar')
    exposePort(8080,8081)
    entryPoint 'sh'
    defaultCommand 'startup.sh'
    addFile('startup.sh', 'startup.sh')
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    images.add(rootProject.name + ":" + version)
}

buildImage.dependsOn excludeLibraries
buildImage.dependsOn copyScript
buildImage.dependsOn copyScript2
buildImage.dependsOn copyJar
buildImage.dependsOn build
copyJar.dependsOn shadowJar
copyJar.dependsOn jar
copyScript2.dependsOn startScripts
distTar.dependsOn shadowJar
distZip.dependsOn shadowJar
startScripts.dependsOn shadowJar
startShadowScripts.dependsOn jar

task tagImage(type:DockerTagImage) {
    dependsOn buildImage
    targetImageId(rootProject.name + ':' + version)
    tag.set 'latest'
    repository.set 'jw78guro/' + rootProject.name
}

task publishImage(type:DockerPushImage) {
    dependsOn tagImage
    images.add 'jw78guro/' + rootProject.name + ':latest'
}

