/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package de.johanneswirth.apps.friends

import de.johanneswirth.apps.common.{ContainerFilter, VerificationHelper}
import de.johanneswirth.apps.friends.services.FriendsService
import io.dropwizard.Application
import io.dropwizard.configuration.{EnvironmentVariableSubstitutor, SubstitutingSourceProvider}
import io.dropwizard.db.DataSourceFactory
import io.dropwizard.jdbi3.JdbiFactory
import io.dropwizard.jersey.jackson.JsonProcessingExceptionMapper
import io.dropwizard.migrations.MigrationsBundle
import io.dropwizard.setup.{Bootstrap, Environment}

object App extends Application[FriendsConfiguration] {
  def main(args: Array[String]): Unit = {
    App.run(args:_*)
  }

  override def initialize(bootstrap: Bootstrap[FriendsConfiguration]): Unit = {
    bootstrap.setConfigurationSourceProvider(new SubstitutingSourceProvider(bootstrap.getConfigurationSourceProvider, new EnvironmentVariableSubstitutor(true)))
    bootstrap.addBundle(new MigrationsBundle[FriendsConfiguration]() {
      override def getDataSourceFactory(configuration: FriendsConfiguration): DataSourceFactory = {
        configuration.database
      }
    })
  }

  override def run(configuration: FriendsConfiguration, environment: Environment): Unit = {
    environment.jersey().register(new JsonProcessingExceptionMapper(true));
    val verificationHelper = new VerificationHelper(configuration.publicKey)
    environment.lifecycle().manage(verificationHelper)
    val jdbiFactory = new JdbiFactory()
    val jdbi = jdbiFactory.build(environment, configuration.database, "mysql")

    environment.jersey().register(new FriendsService(jdbi))
    environment.jersey().register(new ContainerFilter(verificationHelper))
  }
}
